/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        behaviors {
                bhm: balanced_homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;    // <---[[moderate duration]]
                    quick-tap-ms = <0>;
                    flavor = "balanced";
                    bindings = <&kp>, <&kp>;
                };

                ht_tp: tp_homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "TP_HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;    // <---[[moderate duration]]
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };

                as: auto_shift {
                    compatible = "zmk,behavior-hold-tap";
                    label = "AUTO_SHIFT";
                    #binding-cells = <2>;
                    tapping_term_ms = <250>;
                    quick_tap_ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };

                pht: positional_hold_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "POSITIONAL_HOLD_TAP";
                    #binding-cells = <2>;
                    flavor = "hold-preferred";
                    tapping-term-ms = <400>;
                    quick-tap-ms = <200>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <1>;    // <---[[the W key]]
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {

                        bindings = <

   &mt LSHFT ESC    &kp TAB    AS(Q)          AS(W)   AS(E)   AS(R)             AS(T)            AS(Y)                AS(U)            AS(I)           AS(O)     AS(P)           &kp LBKT    &kp ENTER
                    &kp CAPS   AS(A)          AS(S)   AS(D)   AS(F)             AS(G)            AS(H)                AS(J)            AS(K)           AS(L)     AS(SEMI)        AS(SQT)
                    AS(M)      &mt LSHFT Z    AS(Z)   AS(X)   AS(C)             AS(V)            AS(B)                &ht_tp M N       &kp COMMA       &kp DOT   &mt RSHFT FSLH  &kp RSHFT
                                                              &mt LCTRL SPACE   &mt LALT SPACE   &mt LWIN SPACE       &lt RSE SPACE    &lt LWR BSPC    &lt RSE SPACE
                        >;
                };
                lower_layer {
                        bindings = <

   &none     &kp GRAVE  &none        &none   &none       &none     &none                   &kp FSLH     &kp N7   &kp N8   &kp N9   &kp LPAR  &kp RPAR   &kp ENTER
             &kp BSLH   &kp N1       &kp N2  &kp N3      &kp N4    &kp N5                  &kp ASTRK    &kp N4   &kp N5   &kp N6   &kp MINUS &kp PLUS
             &kp F1     &kp LSHFT    &kp F2  &kp F3      &kp F4    &kp F5                  &kp PIPE     &kp N1   &kp N2   &kp N3   &kp LBKT  &kp RBKT
                                             &kp LCTRL   &kp LALT  &kp LWIN                &none        &trans   &kp N0 
                        >;
                };

                raise_layer {
                        bindings = <

   &none    &none  &none   &none  &none   &none   &mo ADJ      &none     &none     &kp UP    &none      &none     &none  &kp BSPC
            &none  &none   &none  &none   &none   &none        &none     &kp LEFT  &kp DOWN  &kp RIGHT  &kp UP     &none
            &trans &trans  &none  &none   &none   &none        &none     &none     &none     &kp LEFT   &kp DOWN  &kp RIGHT
                                  &trans  &trans  &trans       &trans    &none     &none
                        >;
                };
                adjust_layer {
                        bindings = <

   &none      &bootloader &none  &none  &none   &none  &none        &none          &none          &none          &none          &none         &none   &none
              &none       &none  &none  &none   &none  &none        &none          &none          &none          &none          &none         &none
              &bt BT_CLR  &none  &none  &none   &none  &none        &none          &none          &none          &none          &none         &none
                                        &none   &none  &none        &trans         &none          &trans
                        >;
                };
        };
};
