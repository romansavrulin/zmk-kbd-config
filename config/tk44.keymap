/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF    0
#define NUM    1
#define ADJ    2

&lt {
    quick_tap_ms = <150>;
};

&mt {
    quick_tap_ms = <150>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LSHFT ESC  &kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T       &kp Y          &kp U      &kp I      &kp O    &kp P     &kp LBKT  &kp BSLH
               &kp CAPS   &kp A  &kp S  &kp D     &kp F      &kp G       &kp H          &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
               &kp LCTRL  &kp M  &kp Z  &kp X     &kp C      &kp V       &kp B          &kp N      &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                                        &kp LWIN  &kp SPACE  &kp LALT    &lt NUM SPACE  &kp SPACE  &kp RGUI
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &mo ADJ          &kp KP_PLUS      &kp N9     &kp N0      &kp BSPC  &kp LS(N9)  &kp KP_DIVIDE  &kp ENTER
        &none   &kp F5  &kp F6   &kp F7   &kp F8   &kp KP_PLUS      &kp KP_MINUS     &kp N5     &kp N6      &kp N7    &kp N8      &kp LS(N0)
        &trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp KP_DIVIDE    &kp KP_ASTERISK  &kp N1     &kp N2      &kp N3    &kp N4      &none
                                 &trans   &trans   &trans           &trans           &kp SPACE  &kp KP_DOT
            >;
        };

        adjust_layer {
            bindings = <
&none  &bootloader  &none  &none  &none  &none  &none    &none   &none  &none   &none  &none  &none  &none
       &none        &none  &none  &none  &none  &none    &none   &none  &none   &none  &none  &none
       &bt BT_CLR   &none  &none  &none  &none  &none    &none   &none  &none   &none  &none  &none
                                  &none  &none  &none    &trans  &none  &trans
            >;
        };
    };
};
