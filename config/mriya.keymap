/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        kb_bootldr_l {
            bindings = <&bootloader>;
            key-positions = <53 5 0>;
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <53 5 38>;
        };

        kb_bootloader_r {
            bindings = <&bootloader>;
            key-positions = <54 6 11>;
        };
    };

    behaviors {
        n9_bspc: n9_bspc {
            compatible = "zmk,behavior-tap-dance";
            label = "N9_BSPC";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp BSPC>;
        };
    };

    macros {
        asterisk_pipe: asterisk_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp SPACE>,
                <&macro_wait_time 50>,
                <&kp B>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp B &kp SPACE>;

            label = "ASTERISK_PIPE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                  &kp ESCAPE  &kp N1  &kp N2    &kp N3     &kp N4    &kp N5         &kp N6    &kp N7       &kp N8     &kp N9    &kp N0    &kp BSPC
&mt LSHFT ESCAPE  &kp TAB     &kp Q   &kp W     &kp E      &kp R     &kp T          &kp Y     &kp U        &kp I      &kp O     &kp P     &kp LBKT  &kp ENTER
                  &kp CAPS    &kp A   &kp S     &kp D      &kp F     &kp G          &kp H     &kp J        &kp K      &kp L     &kp SEMI  &kp SQT
                  &kp LSHFT   &kp M   &kp Z     &kp X      &kp C     &kp V          &kp B     &kp N        &kp COMMA  &kp DOT   &kp FSLH  &kp RBKT
                                      &kp LGUI  &kp SPACE  &kp LALT  &lt 1 SPACE    &kp RALT  &lt 1 SPACE  &kp SPACE  &kp RGUI
            >;
        };

        num_layer {
            bindings = <
        &kp TAB  &none   &none    &none    &none    &none           &asterisk_pipe   &none   &none   &kp BSPC    &kp BSPC   &kp BSPC
&trans  &kp TAB  &kp F9  &kp F10  &kp F11  &kp F12  &kp LS(N9)      &kp LS(N0)       &kp N7  &kp N8  &kp N9      &kp BSPC   &kp LS(N9)  &kp ENTER
        &none    &kp F5  &kp F6   &kp F7   &kp F8   &kp PLUS        &kp MINUS        &kp N4  &kp N5  &kp N6      &kp SEMI   &kp SQT
        &trans   &kp F1  &kp F2   &kp F3   &kp F4   &kp KP_SLASH    &kp KP_ASTERISK  &kp N1  &kp N2  &kp N3      &kp SLASH  &kp LS(N0)
                         &trans   &trans   &trans   &trans          &trans           &trans  &kp N0  &kp KP_DOT
            >;
        };
    };
};
